{"remainingRequest":"/Users/daviddumas/Project-Ontime/project-ontime/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daviddumas/Project-Ontime/project-ontime/src/components/Loginform.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daviddumas/Project-Ontime/project-ontime/src/components/Loginform.vue","mtime":1639050185115},{"path":"/Users/daviddumas/Project-Ontime/project-ontime/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daviddumas/Project-Ontime/project-ontime/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/daviddumas/Project-Ontime/project-ontime/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daviddumas/Project-Ontime/project-ontime/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiTG9naW5mb3JtIiwKICAgIGRhdGEoKXsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgZW1haWw6ICIiLAogICAgICAgICAgICAgICAgcGFzc3dvcmQ6ICIiLAogICAgICAgIH0KICAgICAgICAKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgYXN5bmMgTG9naW5mb3JtKCl7CiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB7CiAgICAgICAgICAgICAgICBlbWFpbDogdGhpcy5lbWFpbCwKICAgICAgICAgICAgICAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkLAogICAgICAgICAgICB9OwoKICAgICAgICAgICAgLyogT3BoYWxlbiBnZWJydWlrZXIgdWl0IGRlIGRhdGFiYXNlICovCiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly8xMjcuMC4wLjE6NTAwMC9sb2dpbl9yZXF1ZXN0JywgewogICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiAKICAgICAgICAgICAgICAgICAgICB7IkNvbnRlbnQtVHlwZSI6ImFwcGxpY2F0aW9uL2pzb24ifSwKICAgICAgICAgICAgICAgICAgICBjcmVkZW50aWFsczogImluY2x1ZGUiLAogICAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpLAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpCgogICAgICAgICAgICAgICAgLyogaWYgc3RhdGVtZW50IG9tIHRlIGtpamtlbiBvZiBkZSBnZWJydWlrZXIgYXV0aGVudGljYXRlZCBpcyAqLwogICAgICAgICAgICAgICAgaWYocmVzcG9uc2Uuc3RhdHVzID09IDIwMCl7IAoKICAgICAgICAgICAgICAgICAgICBjb25zdCBhdXRoID0gYXdhaXQgcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICAgICAgICAvKiBKV1QgdG9rZW4gb3BzbGFhbiBpbiBsb2NhbCBzdG9yYWdlICovCiAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Rva2VuJywgYXV0aC50b2tlbikKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhhdXRoLnRva2VuKQoKICAgICAgICAgICAgICAgICAgICAvL0NvbW1pdCBuYWFyIGRlIHN0b3JlIGRhdCBkZSBnZWJydWlrZXIgaXMgaW5nZWxvZ2QKICAgICAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoInNldEF1dGhlbnRpY2F0aW9uIiwgdHJ1ZSk7CgogICAgICAgICAgICAgICAgICAgIGxldCByZWRpcmVjdF91cmwgPSB0aGlzLiRyb3V0ZS5xdWVyeS5yZWRpcmVjdCB8fCAnL2JlZ2VsZWlkZXItZGFzaGJvYXJkJwogICAgICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHJlZGlyZWN0X3VybCkgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIC8vbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3Rva2VuJywgcmVzcG9uc2UuZGF0YS50b2tlbikKICAgICAgICAgICAgICAgICAgICBhbGVydCgiVmVya2VlcmRlIGlubG9nIGdlZ2V2ZW5zIikKICAgICAgICAgICAgICAgIH0gICAgICAgIAogICAgICAgIH0KICAgIH0KfQoK"},{"version":3,"sources":["Loginform.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Loginform.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"login\">\n        <br>\n        <br>\n         <!-- Bartimeus logo -->\n        <div class=\"image\">\n            <img src='../assets/logo-BartimÃ©us.png' width=\"150\">\n        </div>\n        <br>\n        <br>\n        <br>\n        <h3>Login</h3>\n        \n        <!-- Login form -->\n        <v-container\n        fluid style=\"width:500px\"\n        >\n            <v-form\n                @submit.prevent=\"Loginform\"\n                method=\"POST\"\n                ref=\"form\"\n                v-model=\"valid\"\n                lazy-validation\n            >\n                <v-text-field\n                id=\"email\"\n                v-model=\"email\"\n                label=\"E-mail\"\n                required\n                ></v-text-field>\n\n                <v-text-field\n                type='password'\n                id=\"password\"\n                v-model=\"password\"\n                label=\"Password\"\n                required\n                ></v-text-field>\n\n                <v-btn\n                type=\"submit\"\n                color=\"primary\"\n                >\n                Login\n                </v-btn>\n\n                 <!-- Moet er een 'is dit een admin account' knop komen? \n                \n                <p>Is dit een Admin account?</p>\n                <input type=\"checkbox\" id=\"checkbox\" v-model=\"checked\">\n                <label for=\"checkbox\">{{ checked }}</label>\n\n                -->\n\n            </v-form>\n        </v-container>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    name: \"Loginform\",\n    data(){\n        return {\n                email: \"\",\n                password: \"\",\n        }\n        \n    },\n    methods: {\n        async Loginform(){\n            const data = {\n                email: this.email,\n                password: this.password,\n            };\n\n            /* Ophalen gebruiker uit de database */\n            const response = await fetch('http://127.0.0.1:5000/login_request', {\n                method: 'POST',\n                headers: \n                    {\"Content-Type\":\"application/json\"},\n                    credentials: \"include\",\n                    body: JSON.stringify(data),\n                });\n                \n                console.log(data)\n\n                /* if statement om te kijken of de gebruiker authenticated is */\n                if(response.status == 200){ \n\n                    const auth = await response.json();\n\n                    /* JWT token opslaan in local storage */\n                    localStorage.setItem('token', auth.token)\n                    console.log(auth.token)\n\n                    //Commit naar de store dat de gebruiker is ingelogd\n                    this.$store.commit(\"setAuthentication\", true);\n\n                    let redirect_url = this.$route.query.redirect || '/begeleider-dashboard'\n                    this.$router.push(redirect_url) \n                    \n                } else {\n                    //localStorage.removeItem('token', response.data.token)\n                    alert(\"Verkeerde inlog gegevens\")\n                }        \n        }\n    }\n}\n\n</script>\n\n<style scoped>\n\n.login {\n    margin-top: 40px;\n    text-align: center;\n}\n\n.v-btn {\n    margin-right: 1em;\n}\n\n</style>"]}]}